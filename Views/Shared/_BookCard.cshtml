@* Views/Shared/_BookCard.cshtml - Improved Version *@
@model BookStoreMVC.Models.ViewModels.BookViewModel

@{
    var isAdminContext = ViewContext.RouteData.Values["controller"]?.ToString() == "Admin";
    var stockStatus = Model.StockQuantity == 0 ? "out-of-stock" :
    Model.StockQuantity < 10 ? "low-stock" : "in-stock";
    var stockClass = stockStatus == "out-of-stock" ? "bg-red-100 text-red-800" :
    stockStatus == "low-stock" ? "bg-yellow-100 text-yellow-800" :
    "bg-green-100 text-green-800";
}

<div class="book-card-wrapper group h-full">
    <div
        class="book-card bg-white rounded-xl shadow-md overflow-hidden hover:shadow-2xl transition-all duration-300 h-full flex flex-col">

        <!-- Book Image Container -  Tỷ lệ 4:5 giúp hiển thị gọn gàng  -->
        <div class="book-image-container relative overflow-hidden bg-gradient-to-br from-gray-50 to-gray-100">
            <a href="@Url.Action(isAdminContext ? "EditBook" : "Details", isAdminContext ? "Admin" : "Books", new { id = Model.Id })"
              class="block aspect-[4/5] relative max-h-96 sm:max-h-80">
                <img src="@Model.ImageUrl" alt="@Model.ImageAlt"
                    class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500" />

                <!-- Gradient overlay on hover -->
                <div
                    class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                </div>
            </a>

            <!-- Discount Badge - Top Left -->
            @if (Model.DisplayPrice > Model.Price)
            {
                var discount = (int)(((Model.DisplayPrice - Model.Price) / Model.DisplayPrice) * 100);
                <div class="absolute top-3 left-3 z-10">
                    <span
                        class="inline-flex items-center px-3 py-1.5 bg-red-500 text-white text-xs font-bold rounded-full shadow-lg animate-pulse">
                        <i class="fas fa-tag mr-1"></i>
                        -@discount%
                    </span>
                </div>
            }

            <!-- Stock Badge - Top Right (Admin only) -->
            @if (isAdminContext)
            {
                <div class="absolute top-3 right-3 z-10">
                    <span
                        class="inline-flex items-center px-2.5 py-1 text-xs font-semibold rounded-full shadow-md @stockClass">
                        @if (stockStatus == "out-of-stock")
                        {
                            <i class="fas fa-times-circle mr-1"></i>
                            <text>Hết hàng</text>
                        }
                        else if (stockStatus == "low-stock")
                        {
                            <i class="fas fa-exclamation-triangle mr-1"></i>
                            <text>Sắp hết</text>
                        }
                        else
                        {
                            <i class="fas fa-check-circle mr-1"></i>
                            <text>Còn hàng</text>
                        }
                    </span>
                </div>
            }

            <!-- Quick Actions Overlay -->
            @if (!isAdminContext)
            {
                <div
                    class="absolute inset-0 bg-black/40 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center gap-2 z-10">
                    <button onclick="quickView(@Model.Id)"
                        class="quick-action-btn p-3 bg-white rounded-full hover:bg-blue-600 hover:text-white transition-all duration-200 transform hover:scale-110 shadow-lg">
                        <i class="fas fa-eye"></i>
                    </button>
                    <button onclick="addToWishlist(@Model.Id)"
                        class="quick-action-btn p-3 bg-white rounded-full hover:bg-pink-500 hover:text-white transition-all duration-200 transform hover:scale-110 shadow-lg">
                        <i class="far fa-heart"></i>
                    </button>
                </div>
            }
        </div>

        <!-- Book Info Section -->
        <div class="book-info p-4 flex-1 flex flex-col">

            <!-- Category Tag -->
            @if (Model.Category != null)
            {
                <div class="mb-2">
                    <a href="@Url.Action("Category", "Books", new { id = Model.CategoryId })"
                        class="inline-flex items-center text-xs font-medium text-blue-600 hover:text-blue-800 bg-blue-50 hover:bg-blue-100 px-2 py-1 rounded-md transition-colors">
                        <i class="fas fa-tag mr-1"></i>
                        @Model.Category.Name
                    </a>
                </div>
            }

            <!-- Book Title - Phía dưới như yêu cầu -->
            <h3 class="book-title text-base font-bold text-gray-900 mb-2 line-clamp-2 min-h-[3rem] leading-tight">
                <a href="@Url.Action(isAdminContext ? "EditBook" : "Details", isAdminContext ? "Admin" : "Books", new { id = Model.Id })"
                    class="hover:text-blue-600 transition-colors">
                    @Model.Title
                </a>
            </h3>

            <!-- Author Name - Phía dưới như yêu cầu -->
            <p class="book-author text-sm text-gray-600 mb-3 flex items-center">
                <i class="fas fa-user-edit mr-1.5 text-gray-400"></i>
                <span class="font-medium">@Model.Author</span>
            </p>

            <!-- Rating (for public view) -->
            @if (!isAdminContext && Model.AverageRating > 0)
            {
                <div class="flex items-center gap-2 mb-3">
                    <div class="flex text-yellow-400 text-sm">
                        @for (int i = 1; i <= 5; i++)
                        {
                            <i class="fas fa-star @(i <= Model.AverageRating ? "" : "text-gray-300")"></i>
                        }
                    </div>
                    <span class="text-xs text-gray-500 font-medium">(@Model.ReviewCount)</span>
                </div>
            }

            <!-- Stock Info (for admin) -->
            @if (isAdminContext)
            {
                <div class="flex items-center gap-3 mb-3 text-xs text-gray-600">
                    <div class="flex items-center">
                        <i class="fas fa-boxes mr-1"></i>
                        <span>Kho: <strong class="text-gray-900">@Model.StockQuantity</strong></span>
                    </div>
                    @if (Model.PageCount > 0)
                    {
                        <div class="flex items-center">
                            <i class="fas fa-file-alt mr-1"></i>
                            <span>@Model.PageCount trang</span>
                        </div>
                    }
                </div>
            }

            <!-- Price & Actions Section -->
            <div class="mt-auto pt-3 border-t border-gray-100">

                <!-- Price Display -->
                <div class="flex items-center justify-between mb-3">
                    <div class="price-container">
                        <p class="text-2xl font-bold text-red-600">
                            @Model.Price.ToString("N0")<span class="text-base"> ₫</span>
                        </p>
                        @if (Model.DisplayPrice > Model.Price)
                        {
                            <p class="text-sm text-gray-400 line-through mt-0.5">
                                @Model.DisplayPrice.ToString("N0") ₫
                            </p>
                        }
                    </div>
                </div>

                <!-- Action Buttons -->
                @if (isAdminContext)
                {
                    <!-- Admin Actions -->
                    <div class="flex gap-2">
                        <a href="@Url.Action("EditBook", "Admin", new { id = Model.Id })"
                            class="flex-1 px-3 py-2.5 bg-blue-600 text-white text-sm font-semibold rounded-lg hover:bg-blue-700 transition-colors text-center shadow-sm">
                            <i class="fas fa-edit mr-1"></i>Chỉnh sửa
                        </a>
                        <a href="@Url.Action("Details", "Books", new { id = Model.Id })" target="_blank"
                            class="px-3 py-2.5 border-2 border-gray-300 text-gray-700 text-sm font-semibold rounded-lg hover:bg-gray-50 hover:border-gray-400 transition-colors">
                            <i class="fas fa-eye"></i>
                        </a>
                    </div>
                }
                else
                {
                    <!-- User Actions - Nút thêm vào giỏ hàng như yêu cầu -->
                    @if (Model.StockQuantity > 0)
                    {
                        <button onclick="addToCart(@Model.Id)"
                            class="add-to-cart-btn w-full px-4 py-3 bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white font-semibold rounded-lg transition-all duration-300 shadow-md hover:shadow-xl transform hover:-translate-y-0.5 flex items-center justify-center gap-2">
                            <i class="fas fa-shopping-cart text-lg"></i>
                            <span>Thêm vào giỏ hàng</span>
                        </button>
                    }
                    else
                    {
                        <button disabled
                            class="w-full px-4 py-3 bg-gray-200 text-gray-500 font-semibold rounded-lg cursor-not-allowed flex items-center justify-center gap-2">
                            <i class="fas fa-times-circle"></i>
                            <span>Hết hàng</span>
                        </button>
                    }
                }
            </div>
        </div>
    </div>
</div>

<style>
    /* Line clamp utility */
    .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    /* Book Card Animation */
    .book-card {
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .book-card:hover {
        transform: translateY(-4px);
    }

    /* Quick Action Buttons */
    .quick-action-btn {
        backdrop-filter: blur(4px);
    }

    /* Add to Cart Button Animation */
    .add-to-cart-btn {
        position: relative;
        overflow: hidden;
    }

    .add-to-cart-btn::before {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 0;
        height: 0;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.3);
        transform: translate(-50%, -50%);
        transition: width 0.6s, height 0.6s;
    }

    .add-to-cart-btn:hover::before {
        width: 300px;
        height: 300px;
    }

    .add-to-cart-btn:active {
        transform: translateY(-1px) scale(0.98);
    }

    /* Responsive adjustments */
    @@media (max-width: 640px) {
        .book-title {
            font-size: 0.9rem;
            min-height: 2.5rem;
        }

        .book-author {
            font-size: 0.8rem;
        }

        .add-to-cart-btn {
            padding: 0.65rem 1rem;
            font-size: 0.875rem;
        }
    }

    /* Smooth transitions */
    * {
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }
</style>