@model BookStoreMVC.Models.ViewModels.OrderCreateViewModel

@{
    ViewData["Title"] = "Thanh toán";
}

@section Styles {
    <style>
        .checkout-step {
            transition: all 0.3s ease;
        }

        .checkout-step.active {
            background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
            color: white;
        }

        .checkout-step.completed {
            background: linear-gradient(135deg, #10b981 0%, #059669 100%);
            color: white;
        }

        .form-section {
            background: #f9fafb;
            border-left: 4px solid #3b82f6;
        }

        .order-summary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
    </style>
}

<div class="max-w-7xl mx-auto">
    <!-- Progress Steps -->
    <div class="mb-8">
        <div class="flex items-center justify-center space-x-4">
            <div class="checkout-step completed flex items-center px-4 py-2 rounded-full">
                <i class="fas fa-shopping-cart mr-2"></i>
                <span class="font-semibold">Giỏ hàng</span>
            </div>
            <i class="fas fa-arrow-right text-gray-400"></i>
            <div class="checkout-step active flex items-center px-4 py-2 rounded-full">
                <i class="fas fa-credit-card mr-2"></i>
                <span class="font-semibold">Thanh toán</span>
            </div>
            <i class="fas fa-arrow-right text-gray-400"></i>
            <div class="checkout-step flex items-center px-4 py-2 rounded-full bg-gray-200 text-gray-600">
                <i class="fas fa-check-circle mr-2"></i>
                <span class="font-semibold">Hoàn thành</span>
            </div>
        </div>
    </div>

    <form asp-action="Checkout" method="post" id="checkoutForm">
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <!-- Checkout Form -->
            <div class="lg:col-span-2 space-y-8">
                <!-- Shipping Information -->
                <div class="form-section p-6 rounded-lg">
                    <h2 class="text-xl font-bold text-gray-800 mb-6 flex items-center">
                        <i class="fas fa-truck mr-3 text-blue-600"></i>
                        Thông tin giao hàng
                    </h2>

                    <!-- Use Profile Address -->
                    <div class="mb-4">
                        <label class="flex items-center">
                            <input type="checkbox" asp-for="UseProfileAddress"
                                class="rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50"
                                onchange="toggleProfileAddress()" />
                            <span class="ml-2 text-sm text-gray-700">Sử dụng địa chỉ trong hồ sơ</span>
                        </label>
                    </div>

                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <label asp-for="ShippingFirstName"
                                class="block text-sm font-medium text-gray-700 mb-2"></label>
                            <input asp-for="ShippingFirstName"
                                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
                            <span asp-validation-for="ShippingFirstName" class="text-red-600 text-sm"></span>
                        </div>

                        <div>
                            <label asp-for="ShippingLastName"
                                class="block text-sm font-medium text-gray-700 mb-2"></label>
                            <input asp-for="ShippingLastName"
                                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
                            <span asp-validation-for="ShippingLastName" class="text-red-600 text-sm"></span>
                        </div>
                    </div>

                    @* <div class="mt-4">
                        <label asp-for="ShippingEmail" class="block text-sm font-medium text-gray-700 mb-2"></label>
                        <input asp-for="ShippingEmail" type="email"
                            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
                        <span asp-validation-for="ShippingEmail" class="text-red-600 text-sm"></span>
                    </div> *@

                    <div class="mt-4">
                        <label asp-for="ShippingPhone" class="block text-sm font-medium text-gray-700 mb-2"></label>
                        <input asp-for="ShippingPhone"
                            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
                        <span asp-validation-for="ShippingPhone" class="text-red-600 text-sm"></span>
                    </div>

                    <div class="mt-4">
                        <label asp-for="ShippingAddress" class="block text-sm font-medium text-gray-700 mb-2"></label>
                        <input asp-for="ShippingAddress"
                            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
                        <span asp-validation-for="ShippingAddress" class="text-red-600 text-sm"></span>
                    </div>

                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mt-4">
                        <div>
                            <label asp-for="ShippingCity" class="block text-sm font-medium text-gray-700 mb-2"></label>
                            <input asp-for="ShippingCity"
                                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
                            <span asp-validation-for="ShippingCity" class="text-red-600 text-sm"></span>
                        </div>

                        <div>
                     <label asp-for="ShippingPostalCode" class="block text-sm font-medium text-gray-700 mb-2"></label>
                            <input asp-for="ShippingPostalCode"
                                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
                            <span asp-validation-for="ShippingPostalCode" class="text-red-600 text-sm"></span>
                        </div>
                    </div>

                         <div class="mt-4">
                        <label asp-for="ShippingCountry" class="block text-sm font-medium text-gray-700 mb-2"></label>
                        <select asp-for="ShippingCountry"
                            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                            <option value="">Chọn quốc gia</option>
                            @foreach (var country in Model.AvailableCountries)
                            {
                                <option value="@country">@country</option>
                            }
                        </select>
                        <span asp-validation-for="ShippingCountry" class="text-red-600 text-sm"></span>
                         </div>
                </div>

                <!-- Payment Information -->
                <div class="form-section p-6 rounded-lg">
                    <h2 class="text-xl font-bold text-gray-800 mb-6 flex items-center">
                        <i class="fas fa-credit-card mr-3 text-green-600"></i>
                        Thông tin thanh toán
                    </h2>

                    <div class="mb-4">
                        <label asp-for="PaymentMethod" class="block text-sm font-medium text-gray-700 mb-2"></label>
                        <select asp-for="PaymentMethod"
                            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                            onchange="togglePaymentFields()">
                            <option value="">Chọn phương thức thanh toán</option>
                            <option value="CreditCard">Thẻ tín dụng</option>
                            <option value="DebitCard">Thẻ ghi nợ</option>
                            <option value="BankTransfer">Chuyển khoản ngân hàng</option>
                            <option value="EWallet">Ví điện tử</option>
                            <option value="COD">Thanh toán khi nhận hàng</option>
                        </select>
                        <span asp-validation-for="PaymentMethod" class="text-red-600 text-sm"></span>
                    </div>

                    <!-- Credit/Debit Card Fields -->
                    <div id="cardFields" style="display: none;">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                            @* <div class="md:col-span-2">
                                <label asp-for="CardNumber"
                                    class="block text-sm font-medium text-gray-700 mb-2"></label>
                                <input asp-for="CardNumber" placeholder="1234 5678 9012 3456"
                                    class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                    maxlength="19" oninput="formatCardNumber(this)" />
                                <span asp-validation-for="CardNumber" class="text-red-600 text-sm"></span>
                            </div>

                            <div>
                                <label asp-for="CardHolderName"
                                    class="block text-sm font-medium text-gray-700 mb-2"></label>
                                <input asp-for="CardHolderName" placeholder="Tên chủ thẻ"
                                    class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
                                <span asp-validation-for="CardHolderName" class="text-red-600 text-sm"></span>
                            </div>

                            <div>
                                <label asp-for="CardExpiryDate"
                                    class="block text-sm font-medium text-gray-700 mb-2"></label>
                                <input asp-for="CardExpiryDate" placeholder="MM/YY"
                                    class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                    maxlength="5" oninput="formatExpiryDate(this)" />
                                <span asp-validation-for="CardExpiryDate" class="text-red-600 text-sm"></span>
                            </div>

                            <div>
                                <label asp-for="CardCVV" class="block text-sm font-medium text-gray-700 mb-2"></label>
                                <input asp-for="CardCVV" placeholder="123" type="password"
                                    class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                    maxlength="4" />
                                <span asp-validation-for="CardCVV" class="text-red-600 text-sm"></span>
                            </div> *@
                        </div>
                    </div>

                    <!-- Bank Transfer Info -->
                    <div id="bankTransferInfo" style="display: none;" class="bg-blue-50 p-4 rounded-lg">
                        <h4 class="font-semibold text-blue-800 mb-2">Thông tin chuyển khoản</h4>
                        <p class="text-sm text-blue-700 mb-2">
                            <strong>Ngân hàng:</strong> Vietcombank<br>
                            <strong>Số tài khoản:</strong> 1234567890<br>
                            <strong>Chủ tài khoản:</strong> BookStore Company<br>
                            <strong>Nội dung:</strong> <span class="font-mono bg-blue-100 px-2 py-1 rounded">Thanh toan
                                don hang [Mã đơn hàng]</span>
                        </p>
                    </div>

                    <!-- E-Wallet Options -->
                    <div id="eWalletOptions" style="display: none;">
                        <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                            <label
                                class="flex items-center justify-center p-3 border border-gray-300 rounded-lg cursor-pointer hover:bg-gray-50">
                                <input type="radio" name="EWalletType" value="MoMo" class="sr-only" />
                                <img src="/images/momo-logo.png" alt="MoMo" class="h-8" />
                            </label>
                            <label
                                class="flex items-center justify-center p-3 border border-gray-300 rounded-lg cursor-pointer hover:bg-gray-50">
                                <input type="radio" name="EWalletType" value="ZaloPay" class="sr-only" />
                                <img src="/images/zalopay-logo.png" alt="ZaloPay" class="h-8" />
                            </label>
                            <label
                                class="flex items-center justify-center p-3 border border-gray-300 rounded-lg cursor-pointer hover:bg-gray-50">
                                <input type="radio" name="EWalletType" value="ViettelPay" class="sr-only" />
                                <img src="/images/viettelpay-logo.png" alt="ViettelPay" class="h-8" />
                            </label>
                            <label
                                class="flex items-center justify-center p-3 border border-gray-300 rounded-lg cursor-pointer hover:bg-gray-50">
                                <input type="radio" name="EWalletType" value="ShopeePay" class="sr-only" />
                                <img src="/images/shopeepay-logo.png" alt="ShopeePay" class="h-8" />
                            </label>
                        </div>
                    </div>
                </div>

                <!-- Order Notes -->
                <div class="form-section p-6 rounded-lg">
                    <h2 class="text-xl font-bold text-gray-800 mb-6 flex items-center">
                        <i class="fas fa-sticky-note mr-3 text-yellow-600"></i>
                        Ghi chú đơn hàng (Không bắt buộc)
                    </h2>

                    <textarea asp-for="Notes" rows="4"
                        placeholder="Ghi chú về đơn hàng của bạn, ví dụ: yêu cầu giao hàng đặc biệt..."
                        class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"></textarea>
                    <span asp-validation-for="Notes" class="text-red-600 text-sm"></span>
                </div>
            </div>

            <!-- Order Summary -->
            <div class="lg:col-span-1">
                <div class="sticky top-4">
                    <div class="order-summary text-white p-6 rounded-lg shadow-lg mb-6">
                        <h3 class="text-xl font-bold mb-4">Đơn hàng của bạn</h3>

                        <!-- Cart Items -->
                        <div class="space-y-3 mb-6">
                            @foreach (var item in Model.Cart.Items)
                            {
                                <div class="flex items-center space-x-3 bg-white bg-opacity-10 p-3 rounded">
                                    <img src="@(item.Book.ImageUrl ?? "/images/no-book-cover.png")" alt="@item.Book.Title"
                                        class="w-12 h-16 object-cover rounded" />
                                    <div class="flex-1 min-w-0">
                                        <h4 class="font-semibold text-sm line-clamp-2">@item.Book.Title</h4>
                                        <p class="text-sm opacity-80">@item.Book.Author</p>
                                        <div class="flex justify-between items-center mt-1">
                                            <span class="text-sm">Số lượng: @item.Quantity</span>
                                            <span class="font-semibold">@item.TotalPrice.ToString("C0")</span>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>

                        <!-- Order Totals -->
                        <div class="space-y-3 border-t border-white border-opacity-20 pt-4">
                            <div class="flex justify-between">
                                <span>Tạm tính:</span>
                                <span>@Model.Cart.SubTotal.ToString("C0")</span>
                            </div>
                            <div class="flex justify-between">
                                <span>Thuế (10%):</span>
                                <span>@Model.Cart.Tax.ToString("C0")</span>
                            </div>
                            <div class="flex justify-between">
                                <span>Phí vận chuyển:</span>
                                <span>
                                    @if (Model.Cart.QualifiesForFreeShipping)
                                    {
                                        <span class="text-green-300">Miễn phí</span>
                                    }
                                    else
                                    {
                                        @Model.Cart.ShippingCost.ToString("C0")
                                    }
                                </span>
                            </div>

                            <hr class="border-white opacity-30" />

                            <div class="flex justify-between text-xl font-bold">
                                <span>Tổng cộng:</span>
                                <span>@Model.Cart.Total.ToString("C0")</span>
                            </div>
                        </div>
                    </div>

                    <!-- Place Order Button -->
                    <button type="submit"
                        class="w-full bg-green-600 hover:bg-green-700 text-white py-4 px-4 rounded-lg font-bold text-lg transition-colors mb-4"
                        id="placeOrderBtn">
                        <i class="fas fa-lock mr-2"></i>
                        Đặt hàng
                    </button>

                    <!-- Security Info -->
                    <div class="bg-white p-4 rounded-lg shadow-sm">
                        <div class="flex items-center space-x-2 text-gray-600 mb-2">
                            <i class="fas fa-shield-alt text-green-600"></i>
                            <span class="text-sm">Thông tin được bảo mật SSL</span>
                        </div>
                        <div class="flex items-center space-x-2 text-gray-600 mb-2">
                            <i class="fas fa-undo text-blue-600"></i>
                            <span class="text-sm">Đổi trả miễn phí trong 7 ngày</span>
                        </div>
                        <div class="flex items-center space-x-2 text-gray-600">
                            <i class="fas fa-headset text-orange-600"></i>
                            <span class="text-sm">Hỗ trợ 24/7</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        function toggleProfileAddress() {
            const useProfile = document.querySelector('input[name="UseProfileAddress"]').checked;
            const fields = [
                'ShippingFirstName', 'ShippingLastName', 'ShippingPhone',
                'ShippingAddress', 'ShippingCity', 'ShippingPostalCode'
            ];

            fields.forEach(field => {
                const input = document.querySelector(`[name="${field}"]`);
                if (input) {
                    if (useProfile && (input.tagName === 'INPUT' || input.tagName === 'TEXTAREA')) {
                           input.readOnly = true;
                            input.classList.add('bg-gray-100');
                    } else {
                         input.readOnly = false;
                        input.classList.remove('bg-gray-100');
                    }
                }
            });
const countrySelect = document.querySelector('select[name="ShippingCountry"]');
            if (countrySelect) {
                if (useProfile) {
                    countrySelect.classList.add('bg-gray-100');
                } else {
                    countrySelect.classList.remove('bg-gray-100');
                }
            }
            if (useProfile) {
                // Load profile data via AJAX
                loadProfileData();
            }
        }

        function togglePaymentFields() {
            const paymentMethod = document.querySelector('select[name="PaymentMethod"]').value;

            // Hide all payment-specific fields
            document.getElementById('cardFields').style.display = 'none';
            document.getElementById('bankTransferInfo').style.display = 'none';
            document.getElementById('eWalletOptions').style.display = 'none';

            // Show relevant fields based on payment method
            switch (paymentMethod) {
                case 'CreditCard':
                case 'DebitCard':
                    document.getElementById('cardFields').style.display = 'block';
                    break;
                case 'BankTransfer':
                    document.getElementById('bankTransferInfo').style.display = 'block';
                    break;
                case 'EWallet':
                    document.getElementById('eWalletOptions').style.display = 'block';
                    break;
            }
        }

        function formatCardNumber(input) {
            let value = input.value.replace(/\D/g, '');
            let formattedValue = value.replace(/(\d{4})(?=\d)/g, '$1 ');
            input.value = formattedValue;
        }

        function formatExpiryDate(input) {
            let value = input.value.replace(/\D/g, '');
            if (value.length >= 2) {
                value = value.substring(0, 2) + '/' + value.substring(2, 4);
            }
            input.value = value;
        }

        function loadProfileData() {
            fetch('/Account/GetProfileData')
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const profile = data.profile;
                          const firstNameInput = document.querySelector('input[name="ShippingFirstName"]');
                        const lastNameInput = document.querySelector('input[name="ShippingLastName"]');
                        const phoneInput = document.querySelector('input[name="ShippingPhone"]');
                        const addressInput = document.querySelector('input[name="ShippingAddress"]');
                        const cityInput = document.querySelector('input[name="ShippingCity"]');
                        const postalCodeInput = document.querySelector('input[name="ShippingPostalCode"]');
                        const countrySelect = document.querySelector('select[name="ShippingCountry"]');

                        if (firstNameInput) firstNameInput.value = profile.firstName || '';
                        if (lastNameInput) lastNameInput.value = profile.lastName || '';
                        if (phoneInput) phoneInput.value = profile.phone || '';
                        if (addressInput) addressInput.value = profile.address || '';
                        if (cityInput) cityInput.value = profile.city || '';
                        if (postalCodeInput) postalCodeInput.value = profile.postalCode || '';
                        if (countrySelect) countrySelect.value = profile.country || '';
                    }
                })
                .catch(error => {
                    console.error('Error loading profile data:', error);
                });
        }

        // Form validation and submission
        document.getElementById('checkoutForm').addEventListener('submit', function (e) {
            e.preventDefault();

            const submitBtn = document.getElementById('placeOrderBtn');
            const originalText = submitBtn.innerHTML;

            // Disable button and show loading
            submitBtn.disabled = true;
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Đang xử lý...';

            // Validate form
            if (!validateForm()) {
                submitBtn.disabled = false;
                submitBtn.innerHTML = originalText;
                return;
            }
const formData = new FormData(this);
            // Submit form
            fetch(this.action, {
                method: 'POST',
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest',
                     'Accept': 'application/json',
                    'RequestVerificationToken': tokenInput ? tokenInput.value : ''
                },
                credentials: 'same-origin'
            })
                 .then(async response => {
                    const contentType = response.headers.get('content-type') || '';

                    if (!contentType.includes('application/json')) {
                        const html = await response.text();
                        document.open();
                        document.write(html);
                        document.close();
                        return null;
                    }

                    const data = await response.json();
                    return { data, ok: response.ok };
                })
                .then(result => {
                    if (!result) {
                        return;
                    }

                    const { data, ok } = result;

                    if (ok && data.success) {
                        // Redirect to order confirmation
                        window.location.href = data.redirectUrl || '/Orders/Confirmation/' + data.orderId;
                    } else {
                        const errorMessage = data.message || 'Có lỗi xảy ra khi đặt hàng!';
                        showNotification(errorMessage, 'error');

                        if (data.errors) {
                            Object.keys(data.errors).forEach(key => {
                                const field = document.querySelector(`[name="${key}"]`);
                                if (field) {
                                    field.classList.add('border-red-500');
                                }
                            });
                        }

                        submitBtn.disabled = false;
                        submitBtn.innerHTML = originalText;
                        return;
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showNotification('Có lỗi xảy ra khi đặt hàng!', 'error');
                    submitBtn.disabled = false;
                    submitBtn.innerHTML = originalText;
                });
        });

        function validateForm() {
            // Basic client-side validation
            const requiredFields = [
               'ShippingFirstName', 'ShippingLastName',
                'ShippingAddress', 'ShippingCity', 'ShippingPostalCode', 'ShippingCountry',
                'PaymentMethod'
            ];

            let isValid = true;

            requiredFields.forEach(field => {
                const input = document.querySelector(`[name="${field}"]`);
                if (input && !input.value.trim()) {
                    input.classList.add('border-red-500');
                    isValid = false;
                } else if (input) {
                    input.classList.remove('border-red-500');
                }
            });

            // Validate payment method specific fields
            const paymentMethod = document.querySelector('select[name="PaymentMethod"]').value;
            if (paymentMethod === 'CreditCard' || paymentMethod === 'DebitCard') {
                const cardFields = ['CardNumber', 'CardHolderName', 'CardExpiryDate', 'CardCVV'];
                cardFields.forEach(field => {
                    const input = document.querySelector(`[name="${field}"]`);
                    if (input && !input.value.trim()) {
                        input.classList.add('border-red-500');
                        isValid = false;
                    } else if (input) {
                        input.classList.remove('border-red-500');
                    }
                });
            }

            if (!isValid) {
                showNotification('Vui lòng điền đầy đủ thông tin bắt buộc!', 'error');
                // Scroll to first error
                const firstError = document.querySelector('.border-red-500');
                if (firstError) {
                    firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
                    firstError.focus();
                }
            }

            return isValid;
        }

        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 px-6 py-3 rounded-lg text-white z-50 ${type === 'success' ? 'bg-green-500' :
                    type === 'error' ? 'bg-red-500' :
                        type === 'info' ? 'bg-blue-500' : 'bg-gray-500'
                }`;
            notification.textContent = message;

            document.body.appendChild(notification);

            setTimeout(() => {
                notification.remove();
            }, 5000);
        }

        // Initialize form
        document.addEventListener('DOMContentLoaded', function () {
            // Set up event listeners
            const paymentSelect = document.querySelector('select[name="PaymentMethod"]');
            if (paymentSelect.value) {
                togglePaymentFields();
            }
        });
        const useProfileCheckbox = document.querySelector('input[name="UseProfileAddress"]');
            if (useProfileCheckbox && useProfileCheckbox.checked) {
                toggleProfileAddress();
            }
    </script>
}