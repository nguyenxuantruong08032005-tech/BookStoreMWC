@* Views/Admin/Orders.cshtml *@
@model BookStoreMVC.Models.ViewModels.OrderListViewModel
@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Quản lý đơn hàng";
    ViewBag.PageTitle = "Quản lý đơn hàng";
    ViewBag.ActiveMenu = "Orders";
}

<!-- Page Header -->
<div class="mb-6">
    <div class="sm:flex sm:items-center sm:justify-between">
        <div>
            <h2 class="text-2xl font-bold text-gray-900 mb-2">
                <i class="fas fa-shopping-cart text-primary-600 mr-3"></i>
                Quản lý đơn hàng
            </h2>
            <p class="text-sm text-gray-600">
                Tổng cộng: <span class="font-semibold text-primary-600">@(Model?.TotalCount ?? 0)</span> đơn hàng
            </p>
        </div>
        <div class="mt-4 sm:mt-0 flex gap-3">
            <button onclick="exportOrders()" 
                    class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50 transition-colors">
                <i class="fas fa-file-export mr-2"></i>
                Xuất dữ liệu
            </button>
        </div>
    </div>
</div>

<!-- Quick Stats -->
<div class="grid grid-cols-1 md:grid-cols-5 gap-4 mb-6">
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-4">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-xs font-medium text-gray-600 uppercase">Tất cả</p>
                <p class="text-2xl font-bold text-gray-900 mt-1">@(Model?.TotalCount ?? 0)</p>
            </div>
            <div class="p-3 bg-blue-100 rounded-lg">
                <i class="fas fa-list text-blue-600"></i>
            </div>
        </div>
    </div>

    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-4">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-xs font-medium text-gray-600 uppercase">Chờ xử lý</p>
                <p class="text-2xl font-bold text-yellow-600 mt-1">@ViewBag.PendingCount</p>
            </div>
            <div class="p-3 bg-yellow-100 rounded-lg">
                <i class="fas fa-clock text-yellow-600"></i>
            </div>
        </div>
    </div>

    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-4">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-xs font-medium text-gray-600 uppercase">Đang xử lý</p>
                <p class="text-2xl font-bold text-blue-600 mt-1">@ViewBag.ProcessingCount</p>
            </div>
            <div class="p-3 bg-blue-100 rounded-lg">
                <i class="fas fa-cog text-blue-600"></i>
            </div>
        </div>
    </div>

    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-4">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-xs font-medium text-gray-600 uppercase">Hoàn thành</p>
                <p class="text-2xl font-bold text-green-600 mt-1">@ViewBag.CompletedCount</p>
            </div>
            <div class="p-3 bg-green-100 rounded-lg">
                <i class="fas fa-check-circle text-green-600"></i>
            </div>
        </div>
    </div>

    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-4">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-xs font-medium text-gray-600 uppercase">Đã hủy</p>
                <p class="text-2xl font-bold text-red-600 mt-1">@ViewBag.CancelledCount</p>
            </div>
            <div class="p-3 bg-red-100 rounded-lg">
                <i class="fas fa-times-circle text-red-600"></i>
            </div>
        </div>
    </div>
</div>

<!-- Filters -->
<div class="bg-white rounded-lg shadow-sm border border-gray-200 mb-6">
    <div class="p-6">
        <form method="get" class="space-y-4">
            <div class="grid grid-cols-1 md:grid-cols-5 gap-4">
                <!-- Search -->
                <div class="md:col-span-2">
                    <label class="block text-sm font-medium text-gray-700 mb-1">
                        <i class="fas fa-search mr-1"></i>Tìm kiếm
                    </label>
                    <input type="text" name="SearchTerm" value="@Model.SearchTerm" 
                           placeholder="Mã đơn hàng, tên khách hàng..."
                           class="block w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500">
                </div>

                <!-- Status Filter -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">
                        <i class="fas fa-filter mr-1"></i>Trạng thái
                    </label>
                    <select name="StatusFilter" 
                            class="block w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500">
                        <option value="">Tất cả</option>
                        <option value="Pending" selected="@(Model.StatusFilter == BookStoreMVC.Models.Entities.OrderStatus.Pending)">Chờ xử lý</option>
                        <option value="Processing" selected="@(Model.StatusFilter == BookStoreMVC.Models.Entities.OrderStatus.Processing)">Đang xử lý</option>
                        <option value="Shipped" selected="@(Model.StatusFilter == BookStoreMVC.Models.Entities.OrderStatus.Shipped)">Đang giao</option>
                        <option value="Delivered" selected="@(Model.StatusFilter == BookStoreMVC.Models.Entities.OrderStatus.Delivered)">Hoàn thành</option>
                        <option value="Cancelled" selected="@(Model.StatusFilter == BookStoreMVC.Models.Entities.OrderStatus.Cancelled)">Đã hủy</option>
                    </select>
                </div>

                <!-- Date From -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">
                        <i class="fas fa-calendar mr-1"></i>Từ ngày
                    </label>
                    <input type="date" name="FromDate" value="@Model.StartDate?.ToString("yyyy-MM-dd")"
                           class="block w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500">
                </div>

                <!-- Date To -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">
                        <i class="fas fa-calendar mr-1"></i>Đến ngày
                    </label>
                    <input type="date" name="ToDate" value="@Model.StartDate?.ToString("yyyy-MM-dd")"
                           class="block w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500">
                </div>
            </div>

            <div class="flex items-center justify-between pt-2">
                <div class="flex gap-3">
                    <button type="submit" 
                            class="px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors">
                        <i class="fas fa-search mr-2"></i>Tìm kiếm
                    </button>
                    <a href="@Url.Action("Orders", "Admin")" 
                       class="px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors">
                        <i class="fas fa-times mr-2"></i>Xóa bộ lọc
                    </a>
                </div>
                <div class="flex items-center gap-2 text-sm text-gray-600">
                    <span>Hiển thị:</span>
                    <select name="PageSize" onchange="this.form.submit()" 
                            class="border border-gray-300 rounded px-2 py-1">
                        <option value="10" selected="@(Model.PageSize == 10)">10</option>
                        <option value="25" selected="@(Model.PageSize == 25)">25</option>
                        <option value="50" selected="@(Model.PageSize == 50)">50</option>
                        <option value="100" selected="@(Model.PageSize == 100)">100</option>
                    </select>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Orders Table -->
<div class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
    @if (Model?.Orders != null && Model.Orders.Any())
    {
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Mã đơn hàng
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Khách hàng
                        </th>
                        <th class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Ngày đặt
                        </th>
                        <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Tổng tiền
                        </th>
                        <th class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Trạng thái
                        </th>
                        <th class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Thao tác
                        </th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    @foreach (var order in Model.Orders)
                    {
                        <tr class="hover:bg-gray-50 transition-colors">
                            <td class="px-6 py-4">
                                <div class="flex items-center">
                                    <div>
                                        <div class="text-sm font-medium text-gray-900">
                                            <a href="@Url.Action("OrderDetails", "Admin", new { id = order.Id })" 
                                               class="text-primary-600 hover:text-primary-900">
                                                @order.OrderNumber
                                            </a>
                                        </div>
                                        <div class="text-xs text-gray-500">
                                            @order.OrderItems.Count sản phẩm
                                        </div>
                                    </div>
                                </div>
                            </td>
                            <td class="px-6 py-4">
                                <div class="flex items-center">
                                    <div class="w-8 h-8 bg-primary-100 rounded-full flex items-center justify-center mr-3">
                                        <span class="text-xs font-semibold text-primary-600">
                                            @(order.User?.Name?.Substring(0, 1).ToUpper() ?? "?")
                                        </span>
                                    </div>
                                    <div>
                                        <div class="text-sm font-medium text-gray-900">@order.User?.Name</div>
                                        <div class="text-xs text-gray-500">@order.User?.Email</div>
                                    </div>
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-center">
                                <div class="text-sm text-gray-900">@order.CreatedAt.ToString("dd/MM/yyyy")</div>
                                <div class="text-xs text-gray-500">@order.CreatedAt.ToString("HH:mm")</div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-right">
                                <div class="text-sm font-semibold text-gray-900">@order.Total.ToString("N0") ₫</div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-center">
                                <span class="px-3 py-1 inline-flex text-xs font-semibold rounded-full @GetStatusClass(order.Status)">
                                    @GetStatusText(order.Status)
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-center">
                                <div class="flex items-center justify-center space-x-2">
                                    <a href="@Url.Action("OrderDetails", "Admin", new { id = order.Id })" 
                                       class="inline-flex items-center justify-center w-8 h-8 rounded-full text-blue-600 hover:bg-blue-50 transition-colors"
                                       title="Xem chi tiết">
                                        <i class="fas fa-eye text-sm"></i>
                                    </a>
                                    @if (order.Status == BookStoreMVC.Models.Entities.OrderStatus.Pending)
                                    {
                                        <button onclick="quickUpdateStatus(@order.Id, 'Processing')"
                                                class="inline-flex items-center justify-center w-8 h-8 rounded-full text-green-600 hover:bg-green-50 transition-colors"
                                                title="Xác nhận đơn">
                                            <i class="fas fa-check text-sm"></i>
                                        </button>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        @if (Model.TotalPages > 1)
        {
            <div class="px-6 py-4 bg-gray-50 border-t border-gray-200">
                <div class="flex items-center justify-between">
                    <div class="text-sm text-gray-700">
                        Hiển thị <b>@((Model.PageNumber - 1) * Model.PageSize + 1)</b> 
                        đến <b>@Math.Min(Model.PageNumber * Model.PageSize, Model.TotalCount)</b> 
                        / <b>@Model.TotalCount</b> đơn hàng
                    </div>

                    <nav class="flex space-x-2">
                        @if (Model.PageNumber > 1)
                        {
                            <a href="@Url.Action("Orders", new { 
                                page = Model.PageNumber - 1,
                                pageSize = Model.PageSize,
                                searchTerm = Model.SearchTerm,
                                statusFilter = Model.StatusFilter,
                                fromDate = Model.StartDate,
                                toDate = Model.EndDate
                            })" 
                               class="px-3 py-2 border border-gray-300 rounded-lg text-sm hover:bg-gray-50">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        }

                        @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
                        {
                            <a href="@Url.Action("Orders", new { 
                                page = i,
                                pageSize = Model.PageSize,
                                searchTerm = Model.SearchTerm,
                                statusFilter = Model.StatusFilter,
                                fromDate = Model.StartDate,
                                toDate = Model.EndDate
                            })" 
                               class="px-3 py-2 border rounded-lg text-sm @(i == Model.PageNumber ? "bg-primary-600 text-white border-primary-600" : "border-gray-300 hover:bg-gray-50")">
                                @i
                            </a>
                        }

                        @if (Model.PageNumber < Model.TotalPages)
                        {
                            <a href="@Url.Action("Orders", new { 
                                page = Model.PageNumber + 1,
                                pageSize = Model.PageSize,
                                searchTerm = Model.SearchTerm,
                                statusFilter = Model.StatusFilter,
                                fromDate = Model.StartDate,
                                toDate = Model.EndDate
                            })" 
                               class="px-3 py-2 border border-gray-300 rounded-lg text-sm hover:bg-gray-50">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        }
                    </nav>
                </div>
            </div>
        }
    }
    else
    {
        <!-- Empty State -->
        <div class="text-center py-12">
            <div class="mx-auto h-24 w-24 text-gray-400 mb-4">
                <i class="fas fa-shopping-cart text-6xl"></i>
            </div>
            <h3 class="text-lg font-medium text-gray-900 mb-2">Không tìm thấy đơn hàng nào</h3>
            <p class="text-gray-500">Không có đơn hàng phù hợp với bộ lọc của bạn.</p>
        </div>
    }
</div>

@section Scripts {
    <script>
        function quickUpdateStatus(orderId, newStatus) {
            if (!confirm('Xác nhận cập nhật trạng thái đơn hàng?')) return;

            $.ajax({
                url: '@Url.Action("UpdateOrderStatus", "Admin")',
                method: 'POST',
                data: {
                    id: orderId,
                    status: newStatus,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        showNotification(response.message, 'success');
                        setTimeout(() => window.location.reload(), 1000);
                    } else {
                        showNotification(response.message, 'error');
                    }
                },
                error: function() {
                    showNotification('Có lỗi xảy ra!', 'error');
                }
            });
        }

        function exportOrders() {
            const params = new URLSearchParams(window.location.search);
            window.open('@Url.Action("ExportOrders", "Admin")?' + params.toString(), '_blank');
        }

        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 z-50 p-4 rounded-lg shadow-lg ${
                type === 'success' ? 'bg-green-50 border border-green-200 text-green-800' : 'bg-red-50 border border-red-200 text-red-800'
            }`;
            notification.innerHTML = `
                <div class="flex items-center">
                    <i class="fas fa-${type === 'success' ? 'check' : 'times'}-circle mr-2"></i>
                    <span>${message}</span>
                </div>
            `;
            document.body.appendChild(notification);
            setTimeout(() => notification.remove(), 3000);
        }
    </script>
}

@functions {
    string GetStatusClass(BookStoreMVC.Models.Entities.OrderStatus status)
    {
        return status switch
        {
            BookStoreMVC.Models.Entities.OrderStatus.Pending => "bg-yellow-100 text-yellow-800",
            BookStoreMVC.Models.Entities.OrderStatus.Processing => "bg-blue-100 text-blue-800",
            BookStoreMVC.Models.Entities.OrderStatus.Shipped => "bg-purple-100 text-purple-800",
            BookStoreMVC.Models.Entities.OrderStatus.Delivered => "bg-green-100 text-green-800",
            BookStoreMVC.Models.Entities.OrderStatus.Cancelled => "bg-red-100 text-red-800",
            _ => "bg-gray-100 text-gray-800"
        };
    }

    string GetStatusText(BookStoreMVC.Models.Entities.OrderStatus status)
    {
        return status switch
        {
            BookStoreMVC.Models.Entities.OrderStatus.Pending => "Chờ xử lý",
            BookStoreMVC.Models.Entities.OrderStatus.Processing => "Đang xử lý",
            BookStoreMVC.Models.Entities.OrderStatus.Shipped => "Đang giao",
            BookStoreMVC.Models.Entities.OrderStatus.Delivered => "Hoàn thành",
            BookStoreMVC.Models.Entities.OrderStatus.Cancelled => "Đã hủy",
            _ => status.ToString()
        };
    }
}