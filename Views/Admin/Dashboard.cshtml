@* Views/Admin/Dashboard.cshtml - Hoàn chỉnh *@
@model BookStoreMVC.Models.ViewModels.AdminDashboardViewModel
@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Admin Dashboard";
    ViewBag.PageTitle = "Dashboard";
    ViewBag.ActiveMenu = "Dashboard";
}

<!-- Dashboard Stats Cards -->
<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
    <!-- Total Revenue -->
    <div class="bg-gradient-to-br from-green-500 to-green-600 rounded-xl shadow-lg p-6 text-white">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-sm font-medium text-green-100">Tổng doanh thu</p>
                <p class="text-3xl font-bold mt-2" id="total-revenue">
                    @(Model?.TotalRevenue.ToString("N0") ?? "0") ₫
                </p>
                <p class="text-xs text-green-100 mt-2">
                    <i class="fas fa-arrow-up mr-1"></i>+12.5% so với tháng trước
                </p>
            </div>
            <div class="w-14 h-14 bg-white bg-opacity-20 rounded-lg flex items-center justify-center">
                <i class="fas fa-dollar-sign text-2xl"></i>
            </div>
        </div>
    </div>

    <!-- Total Orders -->
    <div class="bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl shadow-lg p-6 text-white">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-sm font-medium text-blue-100">Tổng đơn hàng</p>
                <p class="text-3xl font-bold mt-2" id="total-orders">
                    @(Model?.TotalOrders.ToString() ?? "0")
                </p>
                <p class="text-xs text-blue-100 mt-2">
                    <i class="fas fa-arrow-up mr-1"></i>+8.2% so với tháng trước
                </p>
            </div>
            <div class="w-14 h-14 bg-white bg-opacity-20 rounded-lg flex items-center justify-center">
                <i class="fas fa-shopping-cart text-2xl"></i>
            </div>
        </div>
    </div>

    <!-- Total Books -->
    <div class="bg-gradient-to-br from-purple-500 to-purple-600 rounded-xl shadow-lg p-6 text-white">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-sm font-medium text-purple-100">Tổng số sách</p>
                <p class="text-3xl font-bold mt-2" id="total-books">
                    @(Model?.TotalBooks.ToString() ?? "0")
                </p>
                <p class="text-xs text-purple-100 mt-2">
                    <i class="fas fa-plus mr-1"></i>15 sách mới tuần này
                </p>
            </div>
            <div class="w-14 h-14 bg-white bg-opacity-20 rounded-lg flex items-center justify-center">
                <i class="fas fa-book text-2xl"></i>
            </div>
        </div>
    </div>

    <!-- Total Users -->
    <div class="bg-gradient-to-br from-orange-500 to-orange-600 rounded-xl shadow-lg p-6 text-white">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-sm font-medium text-orange-100">Tổng người dùng</p>
                <p class="text-3xl font-bold mt-2" id="total-users">
                    @(Model?.TotalUsers.ToString() ?? "0")
                </p>
                <p class="text-xs text-orange-100 mt-2">
                    <i class="fas fa-arrow-up mr-1"></i>+5.1% so với tháng trước
                </p>
            </div>
            <div class="w-14 h-14 bg-white bg-opacity-20 rounded-lg flex items-center justify-center">
                <i class="fas fa-users text-2xl"></i>
            </div>
        </div>
    </div>
</div>

<!-- Secondary Stats -->
<div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-8">
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-4">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-xs text-gray-600 uppercase font-medium">Chờ xử lý</p>
                <p class="text-2xl font-bold text-yellow-600 mt-1">@(Model?.PendingOrders ?? 0)</p>
            </div>
            <div class="p-2 bg-yellow-100 rounded-lg">
                <i class="fas fa-clock text-yellow-600"></i>
            </div>
        </div>
    </div>

    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-4">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-xs text-gray-600 uppercase font-medium">Sắp hết hàng</p>
                <p class="text-2xl font-bold text-orange-600 mt-1">@(Model?.LowStockBooks ?? 0)</p>
            </div>
            <div class="p-2 bg-orange-100 rounded-lg">
                <i class="fas fa-exclamation-triangle text-orange-600"></i>
            </div>
        </div>
    </div>

    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-4">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-xs text-gray-600 uppercase font-medium">Đánh giá mới</p>
                <p class="text-2xl font-bold text-blue-600 mt-1">@(Model?.UnapprovedReviews ?? 0)</p>
            </div>
            <div class="p-2 bg-blue-100 rounded-lg">
                <i class="fas fa-star text-blue-600"></i>
            </div>
        </div>
    </div>

    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-4">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-xs text-gray-600 uppercase font-medium">Danh mục</p>
                <p class="text-2xl font-bold text-purple-600 mt-1">@(Model?.TotalCategories ?? 0)</p>
            </div>
            <div class="p-2 bg-purple-100 rounded-lg">
                <i class="fas fa-tags text-purple-600"></i>
            </div>
        </div>
    </div>
</div>

<!-- Charts and Tables Row -->
<div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
    <!-- Revenue Chart -->
    <div class="lg:col-span-2">
        <div class="bg-white rounded-xl shadow-sm border border-gray-200">
            <div class="px-6 py-4 border-b border-gray-200">
                <div class="flex items-center justify-between">
                    <h3 class="text-lg font-semibold text-gray-900">Doanh thu theo tháng</h3>
                    <div class="flex space-x-2">
                        <button onclick="updateChart(12)"
                            class="chart-period-btn px-3 py-1 text-sm bg-primary-500 text-white rounded-lg">12
                            tháng</button>
                        <button onclick="updateChart(6)"
                            class="chart-period-btn px-3 py-1 text-sm text-gray-600 hover:bg-gray-100 rounded-lg">6
                            tháng</button>
                        <button onclick="updateChart(3)"
                            class="chart-period-btn px-3 py-1 text-sm text-gray-600 hover:bg-gray-100 rounded-lg">3
                            tháng</button>
                    </div>
                </div>
            </div>
            <div class="p-6">
                <canvas id="revenueChart" height="300"></canvas>
            </div>
        </div>
    </div>

    <!-- Order Status -->
    <div>
        <div class="bg-white rounded-xl shadow-sm border border-gray-200">
            <div class="px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-semibold text-gray-900">Trạng thái đơn hàng</h3>
            </div>
            <div class="p-6">
                <canvas id="orderStatusChart" height="300"></canvas>
            </div>
        </div>
    </div>
</div>

<!-- Quick Actions and Recent Activity -->
<div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
    <!-- Quick Actions -->
    <div>
        <div class="bg-white rounded-xl shadow-sm border border-gray-200">
            <div class="px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-semibold text-gray-900">Thao tác nhanh</h3>
            </div>
            <div class="p-6">
                <div class="space-y-3">
                    <a href="@Url.Action("CreateBook", "Admin")"
                        class="flex items-center p-3 text-sm text-gray-700 hover:bg-blue-50 rounded-lg transition-colors group">
                        <div
                            class="w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center mr-3 group-hover:bg-blue-200 transition-colors">
                            <i class="fas fa-plus text-blue-600"></i>
                        </div>
                        <div>
                            <p class="font-medium">Thêm sách mới</p>
                            <p class="text-xs text-gray-500">Thêm sách vào kho</p>
                        </div>
                    </a>

                    <a href="@Url.Action("CreateCategory", "Admin")"
                        class="flex items-center p-3 text-sm text-gray-700 hover:bg-green-50 rounded-lg transition-colors group">
                        <div
                            class="w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center mr-3 group-hover:bg-green-200 transition-colors">
                            <i class="fas fa-tags text-green-600"></i>
                        </div>
                        <div>
                            <p class="font-medium">Thêm danh mục</p>
                            <p class="text-xs text-gray-500">Tạo danh mục sách</p>
                        </div>
                    </a>

                    <a href="@Url.Action("Orders", "Admin")"
                        class="flex items-center p-3 text-sm text-gray-700 hover:bg-orange-50 rounded-lg transition-colors group">
                        <div
                            class="w-10 h-10 bg-orange-100 rounded-lg flex items-center justify-center mr-3 group-hover:bg-orange-200 transition-colors">
                            <i class="fas fa-shopping-cart text-orange-600"></i>
                        </div>
                        <div>
                            <p class="font-medium">Quản lý đơn hàng</p>
                            <p class="text-xs text-gray-500">Xem đơn hàng mới</p>
                        </div>
                    </a>

                    <a href="@Url.Action("Reports", "Admin")"
                        class="flex items-center p-3 text-sm text-gray-700 hover:bg-purple-50 rounded-lg transition-colors group">
                        <div
                            class="w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center mr-3 group-hover:bg-purple-200 transition-colors">
                            <i class="fas fa-chart-bar text-purple-600"></i>
                        </div>
                        <div>
                            <p class="font-medium">Báo cáo</p>
                            <p class="text-xs text-gray-500">Xem báo cáo chi tiết</p>
                        </div>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Orders -->
    <div class="lg:col-span-2">
        <div class="bg-white rounded-xl shadow-sm border border-gray-200">
            <div class="px-6 py-4 border-b border-gray-200">
                <div class="flex items-center justify-between">
                    <h3 class="text-lg font-semibold text-gray-900">Đơn hàng gần đây</h3>
                    <a href="@Url.Action("Orders", "Admin")" class="text-sm text-primary-600 hover:text-primary-700">
                        Xem tất cả
                        <i class="fas fa-arrow-right ml-1"></i>
                    </a>
                </div>
            </div>
            <div class="overflow-hidden">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Mã đơn hàng
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Khách hàng
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Tổng tiền
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Trạng thái
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Thao tác
                            </th>
                        </tr>
                    </thead>
                    <tbody id="recent-orders" class="bg-white divide-y divide-gray-200">
                        @if (Model?.RecentOrders != null && Model.RecentOrders.Any())
                        {
                            foreach (var order in Model.RecentOrders.Take(5))
                            {
                                <tr class="hover:bg-gray-50">
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                        <a href="@Url.Action("OrderDetails", "Admin", new { id = order.Id })"
                                            class="text-primary-600 hover:text-primary-900">
                                            @order.OrderNumber
                                        </a>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@order.User?.Name</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@order.Total.ToString("N0") ₫
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <span
                                            class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                                            @order.Status.ToString()
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        <a href="@Url.Action("OrderDetails", "Admin", new { id = order.Id })"
                                            class="text-primary-600 hover:text-primary-900">Xem</a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr class="text-center">
                                <td colspan="5" class="px-6 py-4 text-sm text-gray-500">
                                    <i class="fas fa-spinner fa-spin mr-2"></i>Đang tải dữ liệu...
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Recent Activity -->
<div class="bg-white rounded-xl shadow-sm border border-gray-200">
    <div class="px-6 py-4 border-b border-gray-200">
        <h3 class="text-lg font-semibold text-gray-900">Hoạt động gần đây</h3>
    </div>
    <div class="p-6">
        <div class="flow-root">
            <ul id="recent-activity" class="-mb-8">
                @if (Model?.RecentOrders != null && Model.RecentOrders.Any())
                {
                    foreach (var order in Model.RecentOrders.Take(5))
                    {
                        <li>
                            <div class="relative pb-8">
                                @if (!Model.RecentOrders.Last().Equals(order))
                                {
                                    <span class="absolute top-4 left-4 -ml-px h-full w-0.5 bg-gray-200" aria-hidden="true"></span>
                                }
                                <div class="relative flex space-x-3">
                                    <div>
                                        <span
                                            class="h-8 w-8 rounded-full bg-green-500 flex items-center justify-center ring-8 ring-white">
                                            <i class="fas fa-shopping-cart text-white text-xs"></i>
                                        </span>
                                    </div>
                                    <div class="min-w-0 flex-1 pt-1.5 flex justify-between space-x-4">
                                        <div>
                                            <p class="text-sm text-gray-500">Đơn hàng <strong>@order.OrderNumber</strong> đã
                                                được tạo</p>
                                        </div>
                                        <div class="text-right text-sm whitespace-nowrap text-gray-500">
                                            <time>@order.CreatedAt.ToString("dd/MM HH:mm")</time>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </li>
                    }
                }
                else
                {
                    <li class="text-center py-8">
                        <i class="fas fa-spinner fa-spin text-gray-400 mr-2"></i>
                        <span class="text-sm text-gray-500">Đang tải hoạt động...</span>
                    </li>
                }
            </ul>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let revenueChart = null;
        let orderStatusChart = null;

        $(document).ready(function () {
            // Load dashboard stats
            loadDashboardStats();

            // Initialize charts
            initializeRevenueChart();
            initializeOrderStatusChart();

            // Refresh stats every 5 minutes
            setInterval(loadDashboardStats, 300000);
        });

        function loadDashboardStats() {
            $.ajax({
                url: '@Url.Action("GetDashboardStats", "Admin")',
                method: 'GET',
                success: function (response) {
                    if (response.success && response.data) {
                        updateStatsCards(response.data);
                    }
                },
                error: function () {
                    console.log('Error loading dashboard stats');
                }
            });
        }

        function updateStatsCards(data) {
            if (data.totalRevenue) {
                $('#total-revenue').text(formatCurrency(data.totalRevenue));
            }
            if (data.totalOrders) {
                $('#total-orders').text(data.totalOrders);
            }
            if (data.totalBooks) {
                $('#total-books').text(data.totalBooks);
            }
            if (data.totalUsers) {
                $('#total-users').text(data.totalUsers);
            }
        }

        function initializeRevenueChart() {
            const ctx = document.getElementById('revenueChart').getContext('2d');
            const monthlyData = @Html.Raw(Json.Serialize(Model?.MonthlyRevenue ?? new Dictionary<string, decimal>()));

            const labels = Object.keys(monthlyData);
            const data = Object.values(monthlyData);

            revenueChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Doanh thu (₫)',
                        data: data,
                        borderColor: '#3b82f6',
                        backgroundColor: 'rgba(59, 130, 246, 0.1)',
                        borderWidth: 3,
                        fill: true,
                        tension: 0.4,
                        pointRadius: 4,
                        pointHoverRadius: 6
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: true,
                            position: 'top'
                        },
                        tooltip: {
                            callbacks: {
                                label: function (context) {
                                    return 'Doanh thu: ' + formatCurrency(context.parsed.y);
                                }
                            }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function (value) {
                                    return formatCurrency(value);
                                }
                            }
                        }
                    }
                }
            });
        }

        function initializeOrderStatusChart() {
            const ctx = document.getElementById('orderStatusChart').getContext('2d');
            const orderStatusData = @Html.Raw(Json.Serialize(Model?.OrdersByStatus ?? new Dictionary<string, int>()));

            const labels = Object.keys(orderStatusData).map(l => getOrderStatusText(l));
            const data = Object.values(orderStatusData);
            const colors = ['#10b981', '#f59e0b', '#ef4444', '#6b7280', '#8b5cf6'];

            orderStatusChart = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: labels,
                    datasets: [{
                        data: data,
                        backgroundColor: colors,
                        borderWidth: 2,
                        borderColor: '#fff'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });
        }

        function updateChart(months) {
            // Update chart period buttons
            $('.chart-period-btn').removeClass('bg-primary-500 text-white').addClass('text-gray-600 hover:bg-gray-100');
            event.target.classList.remove('text-gray-600', 'hover:bg-gray-100');
            event.target.classList.add('bg-primary-500', 'text-white');

            // Fetch new data for the selected period
            // Implementation would load data for selected period
        }

        function formatCurrency(amount) {
            return new Intl.NumberFormat('vi-VN', {
                style: 'currency',
                currency: 'VND'
            }).format(amount);
        }

        function getOrderStatusText(status) {
            const statusMap = {
                'Pending': 'Chờ xử lý',
                'Processing': 'Đang xử lý',
                'Shipped': 'Đã giao',
                'Delivered': 'Hoàn thành',
                'Cancelled': 'Đã hủy'
            };
            return statusMap[status] || status;
        }
    </script>
}